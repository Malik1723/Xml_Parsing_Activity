Entities_Definitions DEFINITIONS ::= BEGIN
analysis_bounded_consistency ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		l4_application oid,
		node_name string
	}
}
analysis_dynamic_access ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		l4_application oid,
		node_name string
	}
}
uireal_option ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name_id string,
		u_ioption_group oid,
		value real
	}
}
analysis_static_check ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		l4_application oid,
		node_name string
	}
}
analysis_out_of_range ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		l4_application oid,
		node_name string
	}
}
analysis_division_by_zero ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		l4_application oid,
		node_name string
	}
}
task_result_non_linear ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task_result_depth_reached ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task_result_aborted ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
uimap_option ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name_id string,
		u_ioption_group oid,
		from string,
		to string
	}
}
mapping_group ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		mapping_group oid,
		l4_application oid
	}
}
mapping ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		mapping_group oid,
		l4_application oid
	}
}
uioption_group ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		tree_item oid
	}
}
uibool_constraint_option ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name_id string,
		u_ioption_group oid,
		value boolean
	}
}
uistring_option ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name_id string,
		u_ioption_group oid,
		value string
	}
}
uiint_option ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name_id string,
		u_ioption_group oid,
		value integer
	}
}
uifilename_option ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name_id string,
		u_ioption_group oid,
		value string
	}
}
uibool_option ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name_id string,
		u_ioption_group oid,
		value boolean
	}
}
task_result_that_has_model ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task_result_error ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task_result_indeterminate ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task_result_contradictory ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task_result_satisfiable ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		objective_kind integer,
		task_group oid,
		l4_application oid,
		strategy oid,
		mapping oid,
		analysis oid
	}
}
task_result_falsifiable ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task_result_valid ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
task_result ::= SEQUENCE OF {
	SEQUENCE {
		identity oid
	}
}
synch_observer ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		l4_application oid,
		output_name string,
		node_name string,
		domain string,
		type string
	}
}
strategy ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		strategy_group oid,
		l4_application oid,
		name_id string
	}
}
strategy_group ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		strategy_group oid,
		l4_application oid
	}
}
l4_application ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		version integer
	}
}
task_group ::= SEQUENCE OF {
	SEQUENCE {
		identity oid,
		name string,
		description string,
		objective_kind integer,
		task_group oid,
		l4_application oid,
		strategy oid,
		mapping oid
	}
}
base ::= {
{69, ""}
}
l4_application ::= {
{"1", 1}
}
strategy ::= {
{"4", "Debug", "", NULL, "1", "Overflow Debug"},
{"18", "Prove", "", NULL, "1", "Prove"}
}
synch_observer ::= {
{"38", "Proof.prop1", "", "1", "prop1", "Proof::Proof", "true", "bool"}
}
task ::= {
{"39", "Proof.prop1", "", 0, NULL, "1", "4", NULL, "38"},
{"68", "FCU", "", 56, NULL, "1", "18", NULL, "67"}
}
uibool_option ::= {
{"50", "optLemmas", "49", t}
}
uifilename_option ::= {
{"6", "optDumpfile", "62", ""},
{"20", "optDumpfile", "69", ""},
{"43", "optDumpfile", "42", ""},
{"52", "optDumpfile", "51", ""},
{"59", "optDumpfile", "58", ""}
}
uiint_option ::= {
{"8", "optTimeout", "62", -1},
{"22", "optTimeout", "69", -1},
{"36", "optStartDepth", "64", -1},
{"37", "optStopDepth", "64", -1},
{"44", "optTimeout", "42", 0},
{"45", "optThreads", "42", 1},
{"47", "optStartDepth", "46", -1},
{"48", "optStopDepth", "46", -1},
{"53", "optTimeout", "51", 0},
{"54", "optThreads", "51", 1},
{"56", "optStartDepth", "55", -1},
{"57", "optStopDepth", "55", -1},
{"60", "optTimeout", "58", 0},
{"61", "optThreads", "58", 1},
{"63", "optThreads", "62", 1},
{"66", "optThreads", "69", 1}
}
uioption_group ::= {
{"42", "-3"},
{"46", "-3"},
{"49", "-3"},
{"51", "-2"},
{"55", "-2"},
{"58", "-1"},
{"62", "4"},
{"64", "4"},
{"69", "18"}
}
analysis_static_check ::= {
{"67", "FCU", "", "1", "FlightControl::FCU"}
}
END
